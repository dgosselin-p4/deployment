#!/bin/bash
#
# BEGIN_COPYRIGHT
#
# This file is part of SciDB.
# Copyright (C) 2008-2013 SciDB, Inc.
#
# SciDB is free software: you can redistribute it and/or modify
# it under the terms of the AFFERO GNU General Public License as published by
# the Free Software Foundation.
#
# SciDB is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
# INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
# NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
# the AFFERO GNU General Public License for the complete license terms.
#
# You should have received a copy of the AFFERO GNU General Public License
# along with SciDB.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
#
# END_COPYRIGHT
#
set -eu
################################################################
# This script will setup and run postgresql in the user's non-root install tree.
#
# Note that postmaster will be run (and owned) by the current user not postgres.
################################################################
# Global Variables
PG_HBA="$SCIDB_ROOT/var/lib/pgsql/data/pg_hba.conf"
PG_CONF="$SCIDB_ROOT/var/lib/pgsql/data/postgresql.conf"
################################################################
# First check if there is a postmaster already running
#
POST="`ps -e -o cmd|grep -v grep|grep postmaster`" || true
# pg-port from config.ini
MYPORT="`awk -F= '$1 ~ /^pg-port/ {print $2}' $SCIDB_ROOT/opt/scidb/$SCIDB_VER/etc/config.ini`" || true
if [ ! -z "${POST}" ];then
    # There is a postmaster already running
    # Find out it's port
    PORT="`ps -e -o cmd | awk '$1 ~ /postmaster/ {for(i=1;i<NF;i++){if(match("-p",$i)){val=$(i+1)}}} END{print val}'`" || true
    echo
    echo "postgresql is already running on this host on port $PORT."
    echo
    read -e -p "Are you sure you want to run your own? [y|n] " yes_no
    if [[ ${yes_no} =~ ^[yY] ]]; then
	:
    else
	exit 1
    fi
    if [ -z "$MYPORT" ]; then
	if [ $PORT -eq 5432 ]; then
	    echo
	    echo "You did not specify a pg-port in the configuration file."
	    echo "SciDB will assume postgresql is on port 5432"
	    echo "and the postgresql that is already running is on this port."
	    echo
	    echo "You can not start another postgresql on the same port."
	    echo "Please add a different pg-port to the configuration file and try again."
	    exit 1
	fi
    fi
    if [ $MYPORT -eq $PORT ]; then
	echo
	echo "You specified the same pg-port in the configuration file"
	echo "that the postgresql that is already running is using."
	echo
	echo "You can not start another postgresql on the same port."
	echo "Please either stop the currently running postgresql"
	echo "or change the pg-port in the configuration file and try again."
	exit 1
    fi
fi
################################################################
# Initialize postgresql
if [ ! -f $PG_HBA ]; then
   $SCIDB_ROOT/etc/rc.d/init.d/postgresql initdb
fi
################################################################
# Modify pg_hba.conf
#
# Look at host line for 127.0.0.1
AUTH="`awk '$1 ~ /host/ && $4 ~ /^127.0.0.1/ {print $5}' $PG_HBA`" || true
if [ ! -z $AUTH ]; then
    if [ "$AUTH" != "md5" ];then
	sed -i -e "/127.0.0.1/ s/$AUTH/md5/" $PG_HBA
    fi
fi
# Look at host line for ::1
AUTH="`awk '$1 ~ /host/ && $4 ~ /^::1/ {print $5}' $PG_HBA`" || true
if [ ! -z $AUTH ]; then
    if [ "$AUTH" != "md5" ];then
	sed -i -e "/::1/ s/$AUTH/md5/" $PG_HBA
    fi
fi
# Look at host line for subnet
AUTH="`awk '$1 ~ /host/ && $4 !~ /^127.0.0.1/ && $4 ~ /[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+/ {print $5}' $PG_HBA`" || true
if [ -z $AUTH ]; then
    echo
    CIDR=""
    while read -e -p "What is the CIDR of the subnet SciDB will be running on? " CIDR
    do
	if [ "`echo $CIDR | sed 's|^[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\/[0-9]\{1,2\}$||'`" != "" ];then
	    echo
	    echo "ERROR: Invalid CIDR format '$CIDR'."
	    echo "       Should be of the form W.X.Y.Z/N."
	    echo
	    echo "Please try again."
	    CIDR=""
	    continue
	fi
	if [ "${CIDR}" != "${CIDR#127.0.0.1}" ];then
	    echo
	    echo "ERROR: You can not specify localhost IP (127.0.0.1) as part of a CIDR."
	    echo "       The CIDR should be the network mask the cluster is on."
	    echo
	    echo "Please try again."
	    CIDR=""
	    continue
	fi
	break
    done
    echo "# SUBNET connections:" >> $PG_HBA
    echo "host    all         all         $CIDR          md5" >> $PG_HBA
else
    if [ "$AUTH" != "md5" ];then
	SUBNET="`awk '$1 ~ /host/ && $4 !~ /^127.0.0.1/ && $4 ~ /[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+/ {print $4}' $PG_HBA`" || true
	SUBNET_IP="`echo $SUBNET|awk -F/ '{print $1}'`"
	SUBNET_PREFIX="`echo $SUBNET|awk -F/ '{print $2}'`"
	sed -i -e "/$SUBNET_IP\/$SUBNET_PREFIX/ s/ident/md5/" $PG_HBA
    fi
fi
################################################################
# Modify postgresql.conf (listen_address and port)
#
LISTEN="`awk -F= '$1 ~ /^listen_addresses/ {split($2,a," ");print a[1]}' $PG_CONF`"
if [ -z $LISTEN ]; then
    echo "listen_addresses='*'" >> $PG_CONF
else
    if [ "$LISTEN" != "'*'" ]; then
	sed -i -e "/listen_addresses.*$LISTEN/ s/$LISTEN/'*'/" $PG_CONF
    fi
fi
#
PGPORT="`awk -F= '$1 ~ /^port/ {split($2,a," ");print a[1]}' $PG_CONF`"
if [ "$MYPORT" == "$PGPORT" ]; then
    # if port in PG_CONF file is equal to the pg-port in the config.ini file
    # do nothing
    :
else
    if [ -z $PGPORT ]; then
	# No port set in the PG_CONF file
	# set it to pg-port from the config.ini file
	echo "port=$MYPORT" >> $PG_CONF
    else
	if [ ! -z $MYPORT ]; then
	   sed -i -e "/port.*$PGPORT/ s/$PGPORT/$MYPORT/" $PG_CONF
       fi
   fi
fi
################################################################
# With these changes (or not) restart postgresql
$SCIDB_ROOT/etc/rc.d/init.d/postgresql stop
$SCIDB_ROOT/etc/rc.d/init.d/postgresql start
################################################################
# Create symlink and message for future servicing of postgresql
ln -s $SCIDB_ROOT/etc/rc.d/init.d/postgresql postgresql
echo
echo "You have started PostgreSQL as non-root."
echo "This means it is not running as a service and will not automatically start when rebooting."
echo
echo "A symlink to the service routine has been made in your home directory."
echo "Use it to start/stop/status/... postgresql."
