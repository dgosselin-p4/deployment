#!/bin/bash
#
# BEGIN_COPYRIGHT
#
# This file is part of SciDB.
# Copyright (C) 2008-2014 SciDB, Inc.
#
# SciDB is free software: you can redistribute it and/or modify
# it under the terms of the AFFERO GNU General Public License as published by
# the Free Software Foundation.
#
# SciDB is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
# INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
# NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
# the AFFERO GNU General Public License for the complete license terms.
#
# You should have received a copy of the AFFERO GNU General Public License
# along with SciDB.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
#
# END_COPYRIGHT
#
set -u
################################################################
#
# This file is sourced.
#
################################################################
echo "......................................................."
echo "Checking connections via SciDB ports between all nodes."
echo "......................................................."
################################################################
# CHECK SCIDB PORTS BETWEEN ALL NODES
#
# There could be a different number of instances on each host
# but we are just going to use the maximum number of instances
# to get a range of port numbers.
#
max_port=$((base_port + max_inst))
#
rm -f ${WORKING_DIR}/CheckPorts.log
echo
echo "This will check connections via SciDB ports between all nodes."
echo -n "Shall I check SciDB port connections now? [y|n] "
read -e yes_no
if [[ ${yes_no} =~ ^[yY] ]]; then
    :
else
    echo
    echo "Try again when you have established SciDB port connections."
    exit 1
fi
#
# Copy scripts to each host and run them
# capturing output into CheckPorts.log
#
while read host
do
    echo
    echo "Checking connections from $host to all other hosts..."
    ssh -n -o StrictHostKeyChecking=no -o BatchMode=yes root@$host "rm -f /tmp/checkPorts /tmp/check_port /tmp/host_file" || true
    scp -q ${MYDIR}/checkPorts ${MYDIR}/check_port ${host_file} root@$host:/tmp
    ssh -n -o StrictHostKeyChecking=no -o BatchMode=yes root@$host "/tmp/checkPorts /tmp/host_file ${base_port} ${max_port}" >> ${WORKING_DIR}/CheckPorts.log 2>&1 || true
done < ${host_file}
sed -i -e '/OK/d' -e '/Connection refused/d' ${WORKING_DIR}/CheckPorts.log
sed -i -e '/known hosts/d' ${WORKING_DIR}/CheckPorts.log
#
# Was there a problem?
#
echo "................................................................................"
NoRouteWC=0
GetAddrInfoWC=0
OtherWC=0
CheckPortsWC=`wc -l ${WORKING_DIR}/CheckPorts.log|awk '{print $1}'`
if [ $CheckPortsWC -ne 0 ]; then
################################################################
# Split out problems into separate files
#   "No route to host" and "Operation already in progress" >  NoRoute
#   GETADDRINFO > GetAddrInfo
#   Other (anything else)
#
# also a WC flag (<filename>WC) indicating if there was any problem
################
# No route to host
    awk '/No route to host$/ {print $3}' ${WORKING_DIR}/CheckPorts.log|awk -F: '{print $1}'|sort -u > ${WORKING_DIR}/NoRoute
################
# Operation already in progress
    awk '/Operation already in progress$/ {print $3}' ${WORKING_DIR}/CheckPorts.log|awk -F: '{print $1}'|sort -u >> ${WORKING_DIR}/NoRoute
    NoRouteWC=`wc -l ${WORKING_DIR}/NoRoute|awk '{print $1}'`
################
# GETADDRINFO 
    awk '/GETADDRINFO/ {print $1, $3}' ${WORKING_DIR}/CheckPorts.log|awk -F: '{print $1}'|sort -u|awk '{print "  Host:", $1, "can not lookup host:", $2}' > ${WORKING_DIR}/GetAddrInfo
    GetAddrInfoWC=`wc -l ${WORKING_DIR}/GetAddrInfo|awk '{print $1}'`
################
# Other
    grep -v -F 'No route to host' ${WORKING_DIR}/CheckPorts.log | grep -v -F 'Operation already in progress' | grep -v -F GETADDRINFO | sort -u > ${WORKING_DIR}/Other
    OtherWC=`wc -l ${WORKING_DIR}/Other|awk '{print $1}'`
################
# Copy the log for the user's benefit
    cp ${WORKING_DIR}/CheckPorts.log .
fi
#
# Do not know how to fix Other problems
#
if [ $OtherWC -ne 0 ]; then
    echo
    echo "There are problems with port connectivity that I do not know how to fix."
    echo
    while read error
    do
	echo "  $error"
    done < ${WORKING_DIR}/Other
    echo
    echo "There is a log of all port problems in CheckPorts.log."
    echo
    echo "I can offer suggestions of how to fix the 'No route to host'"
    echo "and 'Operation already in progress' and GETADDRINFO errors"
    echo "but the above errors I do not know how to fix."
    echo
    echo "Please at least fix the above errors and try again."
    exit 1
fi
#
# GETADDRINFO problems
#
if [ $GetAddrInfoWC -ne 0 ]; then
    echo
    echo "There are problems looking up hostnames."
    echo
    echo "Perhaps the /etc/resolv.conf file or the /etc/nsswitch.conf"
    echo "on the host doing the lookup is not configured properly."
    echo
    cat ${WORKING_DIR}/GetAddrInfo
    echo
    echo "There is a log of all port problems in CheckPorts.log."
    echo
    echo "The GETADDRINFO errors are the ones listed above."
    echo
    echo "Please at least fix the above errors and try again."
    exit 1
fi
#
# Splitting list of NoRoute to those hosts running iptables and those not
#
touch ${WORKING_DIR}/NoRouteIPtables
touch ${WORKING_DIR}/NoRouteNoIPtables
if [ $NoRouteWC -ne 0 ]; then
    while read host
    do
	ssh -n -o StrictHostKeyChecking=no -o BatchMode=yes root@${host} service iptables status > /dev/null 2>&1
	if [ $? -eq 0 ]; then
	    echo "  $host" >> ${WORKING_DIR}/NoRouteIPtables
	else
	    echo "  $host" >> ${WORKING_DIR}/NoRouteNoIPtables
	fi
    done < ${WORKING_DIR}/NoRoute
fi
NoRouteIPtablesWC=`wc -l ${WORKING_DIR}/NoRouteIPtables|awk '{print $1}'`
NoRouteNoIPtablesWC=`wc -l ${WORKING_DIR}/NoRouteNoIPtables|awk '{print $1}'`
#
# Offer suggestion on fixing NoRoute if iptables are up
#
if [ $NoRouteIPtablesWC -ne 0 ]; then
    echo
    echo "The following hosts appear to have active iptables and are blocking the SciDB ports."
    echo
    cat ${WORKING_DIR}/NoRouteIPtables
    echo
    echo "  We recommend turning off iptables."
    echo "    AS ROOT run the following:"
    echo "      chkconfig iptables off # do not start iptables during boot"
    echo "      service iptables stop  # stop iptables"
    echo
    echo "  Even if you fix the iptables to allow SciDB ports"
    echo "  the use of MPI in SciDB may still give you problems"
    echo "  if a firewall is running."
    echo
    echo "  I can turn off iptables for you on all hosts."
    echo -n "  Would you like me to do that ? [y|n] "
    read -e yes_no
    if [[ ${yes_no} =~ ^[yY] ]]; then
	echo
	while read host
	do
	    echo ${host}
	    echo
	    ssh -n -o StrictHostKeyChecking=no -o BatchMode=yes root@$host service iptables stop
	    ssh -n -o StrictHostKeyChecking=no -o BatchMode=yes root@$host chkconfig iptables off
	done < ${host_file}
	echo
	echo ">>> Now that IP tables are off..."
	echo ">>> Please rerun this script so we may continue."
	exit 1
    fi
    echo
    echo "Please fix the above errors and try again."
    exit 1
fi
if [ $NoRouteNoIPtablesWC -ne 0 ]; then
    echo
    echo "The following hosts are blocking the SciDB ports."
    echo
    echo "Perhaps there is a firewall running on these hosts."
    echo "I checked for active iptables but found none."
    echo
    cat ${WORKING_DIR}/NoRouteNoIPtables
    echo
    echo "Please fix the above errors and try again."
    exit 1
fi
echo
echo "............................................................"
echo "OK: Connections via SciDB ports between all nodes confirmed."
echo "............................................................"
exit 0
